{"version":3,"sources":["Dimianni.svg","Components/Navigation/Navigation.js","Components/Welcome/Welcome.js","Components/Register/Register.js","Components/Footer/Footer.js","Components/FaceRecognition/FaceRecognition.js","Components/Signin/Signin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","className","onClick","ImageInputForm","onInputChange","onButtonSubmit","name","type","placeholder","onChange","onFocus","e","target","to","smooth","offset","duration","Register","state","email","password","onEmailChange","setState","value","onPasswordChange","onNameChange","onSubmitRegister","fetch","JSON","stringify","then","response","json","user","id","props","loadUser","class","this","Component","Footer","role","alt","aria-label","href","FaceRecognition","image","box","boxB","top","topRow","bottom","bottomRow","left","leftCol","right","rightCol","noImg","display","src","style","Signin","signInEmail","signInPassword","event","onSubmitSignIn","method","headers","body","particlesParams","initState","input","imageUrl","route","entries","joined","App","calcFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","document","getElementById","height","Number","width","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","count","Object","assign","catch","params","Logo","Welcome","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.96ec9d91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Dimianni.8fe6c552.svg\";","import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n\n\n    if (isSignedIn) {\n        return (\n            <nav>\n                <p className='navEl' onClick={() => onRouteChange('signout')}>Sign Out</p>\n            </nav>\n        )\n\n    } else {\n        return (\n            <nav className='nav'>\n                <p className='navEl' onClick={() => onRouteChange('signin')}>Sign In</p>\n                <p className='navEl' onClick={() => onRouteChange('register')}>Register</p>\n            </nav>\n        )\n\n    }\n\n\n}\n\nexport default Navigation;","import React from 'react';\nimport * as Scroll from 'react-scroll';\nimport { Link, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n\nconst ImageInputForm = ({ onInputChange, onButtonSubmit, name }) => {\n    return (\n        <div className='welcome-wrapper'>\n            <div className='welcome'>\n                {`Hello ${name}!`}\n            </div>\n            <p className='intro'>\n               Welcome to Dimianni Face Detector!  \n            </p>\n            <p className='postIntro'>\n                This app can detect a face on almost any picture! <br></br> <span>Give it a try! </span> \n            </p>\n            <p className='preInput'>Please insert a link to a picture:</p>\n            <div className='imageInputCont'>\n                <input type=\"text\" className='imageInput' placeholder=\"Link . . .\" onChange={onInputChange} onFocus={(e) => e.target.placeholder = \"\"} />\n                <Link to=\"img\" smooth={true} offset={50} duration={700}>\n                    <button className='imageBtn' onClick={onButtonSubmit}>Detect</button>\n                </Link>\n                \n            </div>\n        </div>\n    );\n}\n\nexport default ImageInputForm;","import React, { Component } from 'react';\n\nclass Register extends Component {\n\n    state = {\n        email: '',\n        password: '',\n        name: ''\n    }\n\n    onEmailChange = (e) => {\n        this.setState({email: e.target.value })\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({ password: e.target.value })\n    }\n    onNameChange = (e) => {\n        this.setState({ name: e.target.value })\n    }\n\n\n    onSubmitRegister = () => {\n        fetch('https://protected-fjord-47913.herokuapp.com/register', {\n            'method': 'post',\n            'headers': { 'Content-Type': 'application/json' },\n            'body': JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) {\n                    this.props.loadUser(user)\n                    this.props.onRouteChange('home')\n                }\n            })\n\n    }\n\n    render() {\n        // const { onRouteChange } = this.props;\n        return (\n           \n            <article className=\"c2\">\n                <div className=\"signin\">\n                    <h1 class=\"signup1\">REGISTER</h1>\n\n                    <input\n                        className=\"inputs\"\n                        type=\"name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"Name . . .\"\n                        onFocus={(e) => e.target.placeholder = \"\"} \n                        onChange={this.onNameChange}\n                    />\n\n                    <input\n                        className=\"inputs\"\n                        type=\"email\"\n                        name=\"email-address\"\n                        id=\"email-address\"\n                        placeholder=\"Email . . .\"\n                        onFocus={(e) => e.target.placeholder = \"\"} \n                        onChange={this.onEmailChange}\n                    />\n\n\n                    <input\n                        className=\"inputs\"\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        placeholder=\"Password . . .\"\n                        onFocus={(e) => e.target.placeholder = \"\"} \n                        onChange={this.onPasswordChange}\n                    />\n\n\n                    <input\n                        onClick={this.onSubmitRegister}\n                        className=\"btn\"\n                        type=\"submit\"\n                        value=\"Let's Go!\"\n                    />\n\n                    {/* <div className=\"noAcc\">Have an account?</div>\n                    <div className=\"\">\n                        <button onClick={() => onRouteChange('signin')} className=\"btnReg\">Sign In</button>\n                    </div> */}\n\n                </div>\n\n\n\n            </article>\n        );\n    }\n\n}\n\nexport default Register;","import React from 'react';\n\n\nconst Footer = () => {\n    return ( \n        <footer className='footer'>\n            <div>\n                Built with <span role=\"img\" alt=\"love\" aria-label=\"\">&#10084;&#65039;</span> \n            </div>\n            <div>\n                © 2020 by <a href=\"http://dimianni.biz/\">Dimianni</a>.\n            </div>\n        </footer>\n     );\n}\n \nexport default Footer;","import React from 'react';\n\nconst FaceRecognition = ({ image, box }) => {\n\n\n    const boxB = { top: box.topRow, bottom: box.bottomRow, left: box.leftCol, right: box.rightCol}\n    const noImg = { display: \"none\" }\n    const img = { display: \"block\" }\n\n    return (\n       \n            <div className='img-wrapper'>\n            <img name='img' id='inputImage' alt='' src={image} style={image ? img : noImg} />\n                <div className='bounding-box' style={image ? boxB : noImg} ></div>\n            </div>\n      \n            \n    );\n}\n\nexport default FaceRecognition;","import React, { Component } from 'react';\n\n\n\nclass Signin extends Component {\n\n\n    state = {\n        signInEmail: '',\n        signInPassword: ''\n    }\n\n\n    onEmailChange = (event) => {\n        this.setState({ signInEmail: event.target.value })\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({ signInPassword: event.target.value })\n    }\n\n    onSubmitSignIn = () => {\n        fetch('https://protected-fjord-47913.herokuapp.com/signin', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) {\n                    this.props.loadUser(user)\n                    this.props.onRouteChange('home');\n                }\n            })\n    }\n\n    render() {\n        const { onRouteChange } = this.props;\n        return (\n\n            <article className=\"c2\">\n                <div className=\"signin\">\n                    <h1 class=\"signup1\">SIGN IN</h1>\n\n                    <input\n                        className=\"inputs\"\n                        type=\"email\"\n                        name=\"email-address\"\n                        id=\"email-address\"\n                        placeholder=\"Email . . .\"\n                        onFocus={(e) => e.target.placeholder = \"\"} \n                        onChange={this.onEmailChange}\n                    />\n\n\n                    <input\n                        className=\"inputs\"\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        placeholder=\"Password . . .\"\n                        onFocus={(e) => e.target.placeholder = \"\"} \n                        onChange={this.onPasswordChange}\n                    />\n\n\n                    <input\n                        onClick={this.onSubmitSignIn}\n                        className=\"btn\"\n                        type=\"submit\"\n                        value=\"Let's Go!\"\n                    />\n\n                    <div className=\"noAcc\">Don't have an account?</div>\n                    <div className=\"\">\n                        <button onClick={() => onRouteChange('register')} className=\"btnReg\">Register</button>\n                    </div>\n\n                </div>\n\n\n\n            </article>\n\n        );\n    }\n}\n\nexport default Signin;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Dimianni.svg';\nimport Welcome from './Components/Welcome/Welcome';\nimport Register from './Components/Register/Register';\nimport Footer from './Components/Footer/Footer';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Signin from './Components/Signin/Signin';\nimport Particles from 'react-particles-js';\n\n\n\nconst particlesParams = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 80,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 800\n      }\n    },\n    \"color\": {\n      \"value\": \"#e25a76\"\n    },\n    \"shape\": {\n      \"type\": \"circle\",\n      \"stroke\": {\n        \"width\": 0,\n        \"color\": \"#000000\"\n      },\n      \"polygon\": {\n        \"nb_sides\": 5\n      },\n      \"image\": {\n        \"src\": \"img/github.svg\",\n        \"width\": 100,\n        \"height\": 100\n      }\n    },\n    \"opacity\": {\n      \"value\": 0.5,\n      \"random\": false,\n      \"anim\": {\n        \"enable\": false,\n        \"speed\": 1,\n        \"opacity_min\": 0.1,\n        \"sync\": false\n      }\n    },\n    \"size\": {\n      \"value\": 3,\n      \"random\": true,\n      \"anim\": {\n        \"enable\": false,\n        \"speed\": 40,\n        \"size_min\": 0.1,\n        \"sync\": false\n      }\n    },\n    \"line_linked\": {\n      \"enable\": false,\n      \"distance\": 150,\n      \"color\": \"#ffffff\",\n      \"opacity\": 0.4,\n      \"width\": 1\n    },\n    \"move\": {\n      \"enable\": true,\n      \"speed\": 6,\n      \"direction\": \"none\",\n      \"random\": false,\n      \"straight\": false,\n      \"out_mode\": \"out\",\n      \"bounce\": false,\n      \"attract\": {\n        \"enable\": false,\n        \"rotateX\": 600,\n        \"rotateY\": 1200\n      }\n    }\n  },\n  \"interactivity\": {\n    \"detect_on\": \"canvas\",\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      },\n      \"onclick\": {\n        \"enable\": true,\n        \"mode\": \"push\"\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"grab\": {\n        \"distance\": 400,\n        \"line_linked\": {\n          \"opacity\": 1\n        }\n      },\n      \"bubble\": {\n        \"distance\": 400,\n        \"size\": 40,\n        \"duration\": 2,\n        \"opacity\": 8,\n        \"speed\": 3\n      },\n      \"repulse\": {\n        \"distance\": 200,\n        \"duration\": 0.4\n      },\n      \"push\": {\n        \"particles_nb\": 4\n      },\n      \"remove\": {\n        \"particles_nb\": 2\n      }\n    }\n  }\n}\n\n\n\n\nconst initState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n}\n\nclass App extends Component {\n\n  state = initState;\n\n  onInputChange = (e) => {\n    this.setState({ input: e.target.value })\n  }\n\n  calcFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\n    const image = document.getElementById('inputImage')\n\n    const height = Number(image.height)\n    const width = Number(image.width)\n\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState({ box: box })\n  }\n\n  onButtonSubmit = () => {\n\n    this.setState({ imageUrl: this.state.input })\n\n    fetch('https://protected-fjord-47913.herokuapp.com/imageurl', {\n      'method': 'post',\n      'headers': { 'Content-Type': 'application/json' },\n      'body': JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://protected-fjord-47913.herokuapp.com/image', {\n            'method': 'put',\n            'headers': { 'Content-Type': 'application/json' },\n            'body': JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n            .catch(console.log)\n        }\n        this.displayFaceBox(this.calcFaceLocation(response))\n      })\n\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initState)\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route })\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  render() {\n\n    const { isSignedIn, imageUrl, box, route } = this.state;\n\n    return (\n      <div className=\"app\">\n\n        <Particles className='particles' params={particlesParams} />\n\n        <div className=\"header\">\n          <div className=\"wrapper\">\n            <img src={Logo} className='logo' alt=\"FaceDec\" />\n            <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n          </div>\n        </div>\n\n\n        {route === 'home'\n          ?\n          <div className='welcomeNImg'>\n            <Welcome onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} name={this.state.user.name} />\n            <FaceRecognition box={box} image={imageUrl} />\n          </div>\n          : (route === 'signin'\n            ?\n            <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            :\n            <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}